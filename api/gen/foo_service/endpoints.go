// Code generated by goa v3.7.12, DO NOT EDIT.
//
// FooService endpoints
//
// Command:
// $ goa gen
// github.com/ernesto-jimenez/example-failing-goa-design/design/example -o .

package fooservice

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "FooService" service endpoints.
type Endpoints struct {
	FooMethod goa.Endpoint
}

// NewEndpoints wraps the methods of the "FooService" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		FooMethod: NewFooMethodEndpoint(s),
	}
}

// Use applies the given middleware to all the "FooService" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.FooMethod = m(e.FooMethod)
}

// NewFooMethodEndpoint returns an endpoint function that calls the method
// "FooMethod" of service "FooService".
func NewFooMethodEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*FooMethodPayload)
		return s.FooMethod(ctx, p)
	}
}
