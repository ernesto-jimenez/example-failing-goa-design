// Code generated by goa v3.7.10, DO NOT EDIT.
//
// FooService HTTP client CLI support package
//
// Command:
// $ goa gen
// github.com/ernesto-jimenez/example-failing-goa-design/design/example -o .

package client

import (
	"encoding/json"
	"fmt"

	fooservice "github.com/ernesto-jimenez/example-failing-goa-design/api/gen/foo_service"
)

// BuildFooMethodPayload builds the payload for the FooService FooMethod
// endpoint from CLI flags.
func BuildFooMethodPayload(fooServiceFooMethodBody string) ([]*fooservice.ExampleType, error) {
	var err error
	var body []*ExampleTypeRequestBody
	{
		err = json.Unmarshal([]byte(fooServiceFooMethodBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'[\n      {\n         \"External\": {\n            \"Field\": \"Nisi molestiae suscipit voluptates voluptates.\"\n         }\n      },\n      {\n         \"External\": {\n            \"Field\": \"Nisi molestiae suscipit voluptates voluptates.\"\n         }\n      },\n      {\n         \"External\": {\n            \"Field\": \"Nisi molestiae suscipit voluptates voluptates.\"\n         }\n      },\n      {\n         \"External\": {\n            \"Field\": \"Nisi molestiae suscipit voluptates voluptates.\"\n         }\n      }\n   ]'")
		}
	}
	v := make([]*fooservice.ExampleType, len(body))
	for i, val := range body {
		v[i] = marshalExampleTypeRequestBodyToFooserviceExampleType(val)
	}
	return v, nil
}
